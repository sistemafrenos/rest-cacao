//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HK
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    using HK.BussinessLogic;

    public partial class LibroCompra : Entity
    {
        [MaxLength(40)]
        public string DocumentoID { get; set; }
        public Nullable<DateTime> Fecha { get; set; }
        public Nullable<int> Mes { get; set; }
        public Nullable<int> Ano { get; set; }
        [MaxLength(40)]
        [Required(ErrorMessage = "Es requerido el Numero")]
        public string Numero { get; set; }
        [MaxLength(40)]
        [Required(ErrorMessage = "Es requerido el Numero de control")]
        public string NumeroControl { get; set; }
        public Nullable<double> MontoExento { get; set; }
        public Nullable<double> MontoGravable { get; set; }
        public Nullable<double> MontoIva { get; set; }
        public Nullable<double> MontoTotal { get; set; }
        [Required(ErrorMessage = "Es requerida la cedula o rif")]
        [MaxLength(10, ErrorMessage = "La cedula o rif debe tener 10 caracteres")]
        public string CedulaRif { get; set; }
        [Required(ErrorMessage = "Es requerida la razon social")]
        [MaxLength(150, ErrorMessage = "La razon social Debe tener hasta 150 caracteres")]
        public string RazonSocial { get; set; }
        public Nullable<double> TasaIva { get; set; }
        [MaxLength(150)]
        public string Direccion { get; set; }
        public Nullable<double> IvaRetenido { get; set; }
        [MaxLength(20)]
        public string ComprobanteRetencion { get; set; }
        public Nullable<double> TasaIvaB { get; set; }
        public Nullable<double> MontoIvaB { get; set; }
        public Nullable<double> MontoGravableB { get; set; }

        [NotMapped]
        public string Inicio { get; set; }
        [NotMapped]
        public string Final { get; set; }

        public void Calcular()
        {
            MontoTotal = (double)Decimal.Round((decimal)(MontoExento.GetValueOrDefault(0)
            + MontoGravable.GetValueOrDefault(0)
            + MontoGravableB.GetValueOrDefault(0)
            + MontoIva.GetValueOrDefault(0)
            + MontoIvaB.GetValueOrDefault(0)));
        }
    }
}
