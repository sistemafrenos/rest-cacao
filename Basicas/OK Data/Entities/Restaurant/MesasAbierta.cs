//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HK
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    using HK.BussinessLogic;

    public partial class MesasAbierta : Entity
    {
        public MesasAbierta()
        {
            TieneBebidas = false;
            TieneComidas = false;
            TieneEventos = false;
            TipoPrecio = "PRECIO 1";
            this.MesasAbiertasProductos = new HashSet<MesasAbiertasProducto>();
        }
        [MaxLength(40)]
        public string MesoneroID { get; set; }
        [MaxLength(20)]
        [Required(ErrorMessage = "Es requerido el codigo de la mesa")]
        public string CodigoMesa { get; set; }
        [MaxLength(40)]
        public string Mesonero { get; set; }
        public Nullable<int> Personas { get; set; }
        public Nullable<System.DateTime> Apertura { get; set; }
        public Nullable<System.DateTime> UltimaImpresion { get; set; }
        public Nullable<double> MontoGravable { get; set; }
        public Nullable<double> MontoExento { get; set; }
        public Nullable<double> MontoIva { get; set; }
        public Nullable<double> MontoTotal { get; set; }
        public Nullable<double> MontoServicio { get; set; }
        [MaxLength(20)]
        public string Numero { get; set; }
        public Nullable<int> NumeroImpresiones { get; set; }
        public string ImpresaPor { get; set; }
        [MaxLength(40)]
        public string Estacion { get; set; }
        public Nullable<bool> CobraServicio { get; set; }
        [MaxLength(10)]
        public string CedulaRif { get; set; }
        [MaxLength(150)]
        public string RazonSocial { get; set; }
        [MaxLength(40)]
        public string Email { get; set; }
        [MaxLength(150)]
        public string Direccion { get; set; }
        public Nullable<bool> Bloqueada { get; set; }
        public Nullable<bool> TieneBebidas { get; set; }
        public Nullable<bool> TieneComidas { get; set; }
        public Nullable<bool> TieneEventos { get; set; }
        public Nullable<double> Descuentos { get; set; }
        [MaxLength(10)]
        public string TipoPrecio { get; set; }
        [MaxLength(40)]
        public string Telefonos { set; get; }
        [MaxLength(40)]
        public string Ubicacion { get; set; }

        public virtual ICollection<MesasAbiertasProducto> MesasAbiertasProductos { get; set; }

        public void Totalizar()
        {
            double tasaIva = OK.SystemParameters.TasaIva.GetValueOrDefault();
            foreach (var item in this.MesasAbiertasProductos.Where(x => x.TasaIva > 0))
            {
                item.TasaIva = tasaIva;
                item.PrecioConIva = (double)Decimal.Round((decimal)(item.Precio + (item.Precio * tasaIva / 100)),2);
                item.Total = item.PrecioConIva * item.Cantidad;
            }
            foreach (var x in MesasAbiertasProductos)
            {
                if (x.Mesonero == null)
                    x.Mesonero = Mesonero;
            }
            var productos =  this.MesasAbiertasProductos.Where(x => x.Anulado != true).ToList();
            this.MontoExento =productos.Where(x => x.TasaIva.GetValueOrDefault(0) == 0).Sum(x => x.Cantidad * x.Precio);
            this.MontoGravable = productos.Where(x => x.TasaIva.GetValueOrDefault(0) > 0).Sum(x => x.Cantidad * x.Precio);
            this.MontoIva = productos.Where(x => x.TasaIva.GetValueOrDefault(0) > 0).Sum(x => x.Cantidad * x.Precio * x.TasaIva / 100);
            this.MontoServicio = this.CobraServicio == true ? this.MontoGravable * 0.1 : 0;
            this.MontoTotal = (double)Decimal.Round((decimal)(
            this.MontoExento.GetValueOrDefault(0)
            + this.MontoGravable.GetValueOrDefault(0)
            + this.MontoIva.GetValueOrDefault(0)
            + this.MontoServicio.GetValueOrDefault(0)
            - this.Descuentos.GetValueOrDefault(0)), 2);
        }
    }
}
