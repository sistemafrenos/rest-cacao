//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using HK.BussinessLogic;

namespace HK
{
    public partial class Producto : Entity
    {
        private double? mUtilidad;
        private double? mUtilidad2;
        private double? mUtilidad3;
        private double? mUtilidad4;
        private double? mTasaIva;
        public Producto()
        {
            Activo = true;
            LlevaInventario = true;
            HabilitadoParaVentas = true;
            HabilitadoParaCompras = true;
            Precio = 0;
            Costo = 0;
            PrecioConIva = 0;
            Existencia = 0;
            CostoTotal = 0;
            Precio2 = 0;
            PrecioConIva2 = 0;
            Precio3 = 0;
            PrecioConIva3 = 0;
            Precio4 = 0;
            PrecioConIva4 = 0;
            Minimo = 0;
            UnidadesxEmpaque = 1;
            UnidadMedida = "UNIDAD";
            this.ProductosCompuestos = new HashSet<ProductosCompuesto>();
        }
        [Required(ErrorMessage = "Es requerido el Codigo")]
        [MaxLength(40)]
        public string Codigo { get; set; }
        [MaxLength(40)]
        public string CodigoProveedor { get; set; }
        [MaxLength(40)]
        public string CodigoBarras { get; set; }
        [MaxLength(100)]
        [Required(ErrorMessage = "Es requerido el departamento")]
        public string Departamento { get; set; }
        [Required(ErrorMessage = "La Descripcion del producto es obligatoria")]
        [MaxLength(150, ErrorMessage = "La Descripcion Debe tener hasta 150 caracteres")]
        public string Descripcion { get; set; }
        [MaxLength(40)]
        public string UnidadMedida { get; set; }
        public Nullable<double> Costo { get; set; }
        public Nullable<double> Precio { get; set; }
        public double? TasaIva
        {
            set
            { mTasaIva = value; }
            get
            {
                if (mTasaIva == null)
                {
                    mTasaIva = OK.SystemParameters.TasaIva;
                }
                return mTasaIva;
            }
        }
        public Nullable<double> Raciones { get; set; }
        public Nullable<double> Existencia { get; set; }
        [MaxLength(40)]
        public string ImpresionComanda { get; set; }
        public Nullable<bool> LlevaInventario { get; set; }
        public Nullable<bool> HabilitadoParaCompras { get; set; }
        public Nullable<bool> HabilitadoParaVentas { get; set; }
        public Nullable<bool> Activo { get; set; }
        public Nullable<bool> ActivoRP { get; set; }
        public Nullable<double> Litros { get; set; }
        public Nullable<double> GradoAlcoholico { get; set; }
        public Nullable<bool> Importado { get; set; }
        public Nullable<bool> UsaContornos { get; set; }
        public Nullable<bool> EsContorno { get; set; }
        public Nullable<double> PrecioConIva { get; set; }
        public Nullable<double> Precio2 { get; set; }
        public Nullable<double> PrecioConIva2 { get; set; }
        public Nullable<double> Minimo { get; set; }
        public Nullable<bool> EsCompuesto { get; set; }
        public Nullable<double> UnidadesxEmpaque { get; set; }
        public Nullable<DateTime> FechaPrecio { get; set; }
        public Nullable<bool> LlevaTermino { get; set; }
        public Nullable<double> UltimoAjuste { get; set; }
        public Nullable<double> ExistenciaAnterior { get; set; }
        public Nullable<double> Precio3 { get; set; }
        public Nullable<double> PrecioConIva3 { get; set; }
        public Nullable<double> Precio4 { get; set; }
        public Nullable<double> PrecioConIva4 { get; set; }
        [MaxLength(100)]
        public string UltimoProveedor { get; set; }
        public virtual ICollection<ProductosCompuesto> ProductosCompuestos { get; set; }
        [NotMapped]
        public double? Utilidad 
        { 
            set
                { mUtilidad =value; }
            get
                {
                    if (mUtilidad == null)
                    {
                        mUtilidad = OK.SystemParameters.Utilidad;
                    }
                    return mUtilidad;
                }
        }
        [NotMapped]
        public double? Utilidad2
        {
            set
            { mUtilidad2 = value; }
            get
            {
                if (mUtilidad2 == null)
                {
                    mUtilidad2 = OK.SystemParameters.Utilidad2;
                }
                return mUtilidad2;
            }
        }
        [NotMapped]
        public double? Utilidad3
        {
            set
            { mUtilidad3 = value; }
            get
            {
                if (mUtilidad3 == null)
                {
                    mUtilidad3 = OK.SystemParameters.Utilidad3;
                }
                return mUtilidad3;
            }
        }
        [NotMapped]
        public double? Utilidad4
        {
            set
            { mUtilidad4 = value; }
            get
            {
                if (mUtilidad4 == null)
                {
                    mUtilidad4 = OK.SystemParameters.Utilidad4;
                }
                return mUtilidad4;
            }
        }
        [NotMapped]
        public double? Cantidad { set; get; }
        [NotMapped]
        public double? Coeficiente
        {
            get
            {
                if (Costo.GetValueOrDefault(0) > 0)
                    return Precio / Costo;
                else
                    return 0;
            }
            set
            {
                var x = value;
            }
        }
        [NotMapped]
        public double? CostoTotal
        {
            get
            {
                return this.Costo.GetValueOrDefault(0) * this.Existencia.GetValueOrDefault(0);
            }
            set
            {
                var x = value;
            }
        }

    }
}
